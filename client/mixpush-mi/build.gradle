apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    namespace 'com.mixpush.mi'
    compileSdkVersion 34

    defaultConfig {
        minSdkVersion 19

    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api(name: 'MiPush_SDK_Client_6_0_1-C_3rd', ext: 'aar')
    implementation project(path: ':mixpush-core')
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // 使用 bundleReleaseAar 任务的输出
                artifact bundleReleaseAar
                groupId = 'com.github.beiguancyc.mixpush'
                artifactId = 'mixpush-mi'
                version = project.hasProperty('version') ? project.version : '1.0.0'
                
                // 包含本地AAR文件到发布artifact中
                artifact("libs/MiPush_SDK_Client_6_0_1-C_3rd.aar") {
                    classifier = 'mipush-sdk'
                    extension = 'aar'
                }
                
                // 添加依赖信息到POM
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    
                    // 添加核心模块依赖
                    def coreDep = dependenciesNode.appendNode('dependency')
                    coreDep.appendNode('groupId', 'com.github.beiguancyc.mixpush')
                    coreDep.appendNode('artifactId', 'mixpush-core')
                    coreDep.appendNode('version', project.hasProperty('version') ? project.version : '1.0.0')
                    coreDep.appendNode('scope', 'compile')
                }
            }
        }
    }
}